{% set version = "1.11.0" %}

package:
  name: python-blosc
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/b/blosc/blosc-{{ version }}.tar.gz
  sha256: c985b8f435dbc49b190fe88947539ed710ad0e9aaaf83778acc506a71ada7bd2
  patches:
    - 242-deactivate-sse-for-unsupported-cpus.patch

build:
  number: 0
  script:
    # We can't use CMAKE_GENERATOR implicitly via conda_build_config.yaml, yet,
    # due to https://github.com/AnacondaRecipes/aggregate/pull/182
    - set "CMAKE_GENERATOR={{ CMAKE_GENERATOR }}"  # [win]
    - export USE_SYSTEM_BLOSC=1    # [unix]
    - set "USE_SYSTEM_BLOSC=1"     # [win]
    - {{ PYTHON }} -m pip install . -vv
    # When cross-compiling scikit-build will link to libpython.dylib which results
    # in segfaults. Let's replace that with libc++
    - ${INSTALL_NAME_TOOL} -change @rpath/libpython${PY_VER}.dylib @rpath/libc++.1.dylib ${PREFIX}/lib/python${PY_VER}/site-packages/blosc/blosc_extension.cpython-{{ py }}-darwin.so   # [build_platform != target_platform and osx]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - make
  host:
    - python
    - pip
    - blosc
    - setuptools
    - wheel
    - scikit-build
  run:
    - python

test:
  requires:
    - numpy
    - psutil
  imports:
    - blosc
  commands:
    - python -c "import blosc; blosc.print_versions()"
    - python -c "import blosc; blosc.test()"

about:
  home: https://github.com/Blosc/python-blosc
  license_family: BSD
  license: BSD-3-Clause
  license_file:
    - LICENSES/BLOSC.txt
  dev_url: https://github.com/Blosc/python-blosc
  doc_url: http://python-blosc.blosc.org/
  summary: A Python wrapper for the extremely fast Blosc compression library

extra:
  recipe-maintainers:
    - FrancescElies
    - ocefpaf
